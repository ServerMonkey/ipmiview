#!/bin/sh

# help
if [ -z "${1}" ] || [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    echo "Manage Supermicro Servers via remote iKVM."
    echo "Usage:"
    echo "  ikvm <IP> <USER> <PASS> -n,--noscale"
    echo "-n or --noscale will disable double DPI scaling of iKVM window."
    echo "Example:"
    echo "  ikvm 192.168.1.10 peteradmin l33tpass -n"
    exit 0
fi

# must run as normal user
if [ "$(id -u)" = 0 ]; then
    echo 'This script must be run as a normal user, not root!' >&2
    exit 1
fi

if [ -z "$(command -v xdotool)" ]; then
    echo "xdotool is not installed. Install to make this script work."
    exit 1
fi

# iKVM.jar will create a config file in the CWD
WORK_DIR="$HOME/.ipmiview"
mkdir -p "$WORK_DIR"
cd "$WORK_DIR" || exit 1

# parameters
IKVM_IP="$1"
IKVM_USER="$2"
IKVM_PASS="$3"
UI_SCALE="$4"

if [ -z "${2}" ] || [ -z "${3}" ]; then
    echo "You need to enter the username and password"
    exit 1
fi

# variables
ORIG="/usr/local/share/ipmiview/orig/"
JAVA="$ORIG/jre/bin"

if [ "$UI_SCALE" = "--noscale" ] || [ "$UI_SCALE" = "-n" ]; then
    ARG_SCALE="1"
else
    ARG_SCALE="2.5"
fi

# test if ikvm is supported
PORT_SCAN=$(nc -v -w1 "$IKVM_IP" 5900 2>&1)
if echo "$PORT_SCAN" | sed -n '1p' | grep -q "succeeded"; then
    if echo "$PORT_SCAN" | sed -n '2p' | grep -q "RFB 003.008"; then
        :
    else
        echo "ERROR: The service on Port 5900 does not support ikvm"
        exit 1
    fi
else
    echo "ERROR: Port 5900 is closed"
    exit 1
fi

# open ikvm window
$JAVA/java \
    -Dsun.java2d.uiScale="$ARG_SCALE" \
    -Djava.library.path="$ORIG" \
    -jar "$ORIG/iKVM.jar" "$IKVM_IP" "$IKVM_USER" "$IKVM_PASS" \
    null 5900 623 2 0 >/dev/null 2>&1 &

# wait for proper start
sleep 2

# fix window scaling bug
IKVM_WINDOWS=$(xdotool search --name 'Java iKVM Viewer')
for i in $IKVM_WINDOWS; do
    PID=$(xdotool getwindowname "$i")
    if echo "$PID" | grep -q "$IKVM_IP"; then
        xdotool key --window "$TARGET_WINDOW" F7
    fi
done
